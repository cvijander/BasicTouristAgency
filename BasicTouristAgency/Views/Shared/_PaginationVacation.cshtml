@model BasicTouristAgency.ViewModel.IPaginationViewModel<BasicTouristAgency.Models.Vacation>


    <head>
        <link rel="stylesheet" href="~/css/Pagination.css" />
    </head>

    <nav class="Page-navigation">
        @if (Model.HasPrevious)
    {
        <a href="@Url.Action("Index",new { 
              page = Model.CurrentPage -1,
              minPrice = Context.Request.Query["minPrice"],
              maxPrice = Context.Request.Query["maxPrice"],
              vacationName = Context.Request.Query["vacationName"],
              startDate = Context.Request.Query["startDate"],
              endDate = Context.Request.Query["endDate"], 
              vacType = Context.Request.Query["vacType"],
              sortBy = Context.Request.Query["sortBy"],
              descending = Context.Request.Query["descending"] })" class="btn btn-primary-pagination">Previuos</a>
    }

    @for (int i= 1; i <= Model.TotalPages; i++ )
    {
        if(Model.CurrentPage == i)
        {
            <a href="@Url.Action("Index", new { 
              page = i ,
              minPrice = Context.Request.Query["minPrice"],
              maxPrice = Context.Request.Query["maxPrice"],
              vacationName = Context.Request.Query["vacationName"],
              startDate = Context.Request.Query["startDate"],
              endDate = Context.Request.Query["endDate"],
              vacType = Context.Request.Query["vacType"],
              sortBy = Context.Request.Query["sortBy"],
              descending = Context.Request.Query["descending"]  })" class="btn disabled-pagination">@i</a>
        }

        else
        {
            <a href="@Url.Action("Index", new {
              page = i ,
              minPrice = Context.Request.Query["minPrice"],
              maxPrice = Context.Request.Query["maxPrice"],
              vacationName = Context.Request.Query["vacationName"],
              startDate = Context.Request.Query["startDate"],
              endDate = Context.Request.Query["endDate"],
              vacType = Context.Request.Query["vacType"],
              sortBy = Context.Request.Query["sortBy"],
              descending = Context.Request.Query["descending"]  })" class="btn btn-warning-pagination">@i</a>
        }
    }
    @if (Model.HasNext)
    {
        <a href="@Url.Action("Index", new { 
              page = Model.CurrentPage + 1,
              minPrice = Context.Request.Query["minPrice"],
              maxPrice = Context.Request.Query["maxPrice"],
              vacationName = Context.Request.Query["vacationName"],
              startDate = Context.Request.Query["startDate"],
              endDate = Context.Request.Query["endDate"],
              vacType = Context.Request.Query["vacType"],
              sortBy = Context.Request.Query["sortBy"],
              descending = Context.Request.Query["descending"] })" class="btn btn-secondary-pagination">Next</a>
    }
</nav>