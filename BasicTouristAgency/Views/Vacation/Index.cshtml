@model BasicTouristAgency.ViewModel.PaginationViewModel<Vacation>

    @{
        ViewData["Title"] = "Show all vacations";
    }


@if(TempData["Message"] != null )
{
    <div class=" alert  alert-success">
        @TempData["Message"]
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        @TempData["Success"]
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}



    <form asp-action="Index" asp-controller="Vacation" method="get">
        <div class="form-group">
            <div class="row mt-4">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="minPrice" class="form-label">Min price: </label>
                        <input type="number" class="form-control" name="minPrice" id="minPrice" value="@Context.Request.Query["minPrice"]" min="0" step="1" placeholder="Please enter minimal price (lower limit)" />
                     </div>
                </div>                  
         
                 <div class="col-md-4">
                     <div class="form-group">
                        <label for="maxPrice" class="form-label">Max price: </label>
                        <input type="number" class="form-control" name="maxPrice" id="maxPrice" value="@Context.Request.Query["maxPrice"]" min="0" step="1" placeholder="Please enter maximal price (upper limit)" />
                     </div>
                 </div> 

                 <div class="col-md-4">
                     <div class="form-group">
                        <label for="vacationName" class="form-label">Name:</label>
                        <input type="text" class="form-control" name="vacationName" id="vacationName" value="@Context.Request.Query["vacationName"]" placeholder="Enter name" />
                     </div>
                 </div>                   
            </div>

            <div class="row mt-4">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="startDate" class="form-label">Start Date:</label>
                        <input type="date" class="form-control" name="startDate" id="startDate" value="@Context.Request.Query["startDate"]" />
                    </div>                   
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label for="endDate" class="form-label">End Date:</label>
                        <input type="date" class="form-control" name="endDate" id="endDate" value="@Context.Request.Query["endDate"]" />
                    </div>                    
                </div>
            </div>

            <div class="row mt-4">
                @* <div class="col-md-6"> *@
                @*     <div class="form-group"> *@
                @*         <label for="vacType" class="form-label">Vacation type: </label> *@
                @*         <select class="form-control" name="vacType" id="vacType" asp-items="ViewBag.VacationTypes"> *@
                @*             <option value="">--Select type --</option>    *@
                @*         </select> *@
                @*     </div>                    *@
                @* </div> *@
            <div class="col-md-6">
                <div class="form-group">
                    <label for="vacType" class="form-label">Vacation type: </label>
                    <select class="form-control" name="vacType" id="vacType" >
                        <option value="" >--Select vacation type --</option>

                        @foreach(var item in (List<SelectListItem>)ViewBag.VacationTypes)
                            {
                                @if(Context.Request.Query["vacType"] == item.Value)
                                {
                                    <option value="@item.Value" selected>@item.Text</option>
                                }
                                else 
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }                                
                            }
                    </select>                    
                </div>
            </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="sortBy" class="form-label">Sort by</label>
                        <select class="form-control" name="sortBy" id="sortBy">
                            <option value="StartDate" selected="@(Context.Request.Query["sortBy"] == "StartDate" ? "selected": null )">Start Date</option>
                            <option value="EndDate" selected="@(Context.Request.Query["sortBy"] == "EndDate" ? "selected" : null )">End Date</option>
                            <option value="Price" selected="@(Context.Request.Query["sortBy"] == "Price" ? "selected" : null)">Price</option>
                    </select>
                    </div>                   
                </div>
            </div>
            <div class="row mt-4">
                <div class="col-md-12 d-flex justify-content-center">
                    <div class="form-group">
                        <label class="form-check-label m-2">
                            <input type="checkbox" name="orderByParams" value="true" class="form-check-input mr-2" @(Context.Request.Query["orderByParams"] == "true" ? "checked" : "") /> Check this if  you want a descending order
                        </label>
                    </div>                   
                </div>
            </div>

            <div class="row mt-4 mb-5">
                <div class="col-md-5">                    
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
                <div class="col-md-2">

                </div>
                <div class="col-md-5">
                <a href="@Url.Action("Index","Vacation")" class="btn btn-secondary">Clear all filters</a>
                </div>
            </div>            
        </div>                    
    </form>

    <div class="vacation-list">
        @foreach(Vacation singleVacation in Model.Collection)
    {
        <div class="vacation-solo">
            @await Html.PartialAsync("_VacationAdminCard", singleVacation, new ViewDataDictionary(ViewData) { { "ShowVacationId", true }, { "ShowEditLink", true }, { "ShowDeleteLink", true }, {"ShowReservationLink" ,true} })
        </div>

    }
    </div>

    @await Html.PartialAsync("_PaginationVacation", Model)

        <style>
    .btn-primary {
        background-color: #D5BE91 !important;
        border-color: #D5BE91 !important;
    }

    .btn-primary:hover {
        background-color: #A0522D !important;
        border-color: #A0522D !important;
        }

    
     body {
         background-color: #F4F1E1;
    }
</style>
        </style>